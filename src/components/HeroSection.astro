---
import Grid from './Grid.astro'

const hobbies = [
  { icon: 'i-pixelarticons-code', label: 'CODE', level: 30 },
  { icon: 'i-pixelarticons-book', label: 'BOOK', level: 25 },
  { icon: 'i-pixelarticons-movie', label: 'MOVIE', level: 50 },
  { icon: 'i-pixelarticons-gamepad ', label: 'GAME', level: 30 },
]
---

<div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-20">
  <div class="space-y-6">
    <div
      class="inline-flex items-center gap-2 px-4 py-2 bg-primary/10 text-primary rounded-lg"
    >
      <span class="animate-pulse">●</span>
      <span class="font-pixel">ONLINE</span>
    </div>

    <h1 class="text-4xl md:text-6xl font-pixel leading-tight">
      DEVELOPER<br />
      <type-writer class="text-primary" data-rotate='["FRONTEND", "BACKEND", "FULLSTACK"]' data-period="2000"></type-writer>
    </h1>

    <p class="text-slate-400 text-lg">
      Just for fun and life.
    </p>

    <div class="grid grid-cols-2 sm:grid-cols-4 gap-4">
      {
        hobbies.map((hobby) => (
          <div class="pixel-hobby-box">
            <div class="flex flex-col items-center gap-2">
              <span
                class={`${hobby.icon} text-2xl group-hover:text-primary transition-colors`}
              />
              <span class="text-xs">{hobby.label}</span>
            </div>
            <div class="hobby-level" style={`--level: ${hobby.level}%`}>
              <div class="h-1 w-full bg-slate-700/50">
                <div
                  class="h-full bg-primary transition-all duration-1000"
                  style="width: 0%"
                />
              </div>
            </div>
          </div>
        ))
      }
    </div>
  </div>

  <div class="pixel-grid relative h-[400px] border-2 border-primary/20">
    <Grid />
    <div
      id="character"
      class="absolute z-10 pointer-events-none transition-transform duration-300 ease-out"
    >
      <div
        class="w-12 h-12 bg-primary rounded-lg shadow-[0_0_15px_rgba(0,255,157,0.5)]"
      >
      </div>
    </div>
  </div>
</div>

<style>
  .pixel-hobby-box {
    @apply relative p-4 border-2 border-slate-700 hover:border-primary 
         transition-all cursor-pointer overflow-hidden;
  }

  .hobby-level {
    @apply absolute bottom-2 left-2 right-2;
  }

  .pixel-grid {
    @apply relative overflow-hidden bg-slate-200/50 dark:bg-slate-700/50 ;
  }

  @keyframes floatc {
    0%,
    100% {
      transform: translate(var(--x, 0), calc(var(--y, 0) + 0px));
    }
    50% {
      transform: translate(var(--x, 0), calc(var(--y, 0) - 10px));
    }
  }

  #character {
    animation: floatc 2s ease-in-out infinite;
  }
</style>

<script>
class TypewriterComponent extends HTMLElement {
  private toRotate: string[];
  private period: number;
  private loopNum: number;
  private txt: string;
  private isDeleting: boolean;

  constructor() {
    super();
    this.toRotate = [];
    this.period = 2000;
    this.loopNum = 0;
    this.txt = "";
    this.isDeleting = false;
  }

  connectedCallback() {
    const toRotate = this.getAttribute('data-rotate');
    const period = this.getAttribute('data-period');

    if (toRotate) {
      this.toRotate = JSON.parse(toRotate);
    }
    if (period) {
      this.period = parseInt(period, 10) || 2000;
    }

    this.tick();
  }

  tick() {
    const i = this.loopNum % this.toRotate.length;
    const fullTxt = this.toRotate[i];

    if (this.isDeleting) {
      this.txt = fullTxt.substring(0, this.txt.length - 1);
    } else {
      this.txt = fullTxt.substring(0, this.txt.length + 1);
    }

    this.innerHTML = '<span class="h-auto inline-block">' + this.txt + '</span>';

    let delta = 200 - Math.random() * 100;

    if (this.isDeleting) {
      delta /= 2;
    }

    if (!this.isDeleting && this.txt === fullTxt) {
      delta = this.period;
      this.isDeleting = true;
    } else if (this.isDeleting && this.txt === "") {
      this.isDeleting = false;
      this.loopNum++;
      delta = 500;
    }

    setTimeout(() => this.tick(), delta);
  }
}

customElements.define('type-writer', TypewriterComponent);
</script>

<script>
  // Character movement
  function initCharacterMovement() {
    const character = document.getElementById("character");
    const grid = document.querySelector(".pixel-grid") as HTMLElement;

    if (!character || !grid) return;

    let isMoving = false;

    grid.addEventListener("mousemove", (e) => {
      if (!isMoving) {
        isMoving = true;
        requestAnimationFrame(() => {
          const rect = grid.getBoundingClientRect();
          const x = e.clientX - rect.left - 24; // Center the character (48/2)
          const y = e.clientY - rect.top - 24;

          // Update CSS variables for position
          character.style.setProperty("--x", `${x}px`);
          character.style.setProperty("--y", `${y}px`);
          character.style.transform = `translate(${x}px, ${y}px)`;

          isMoving = false;
        });
      }
    });
  }

  document.addEventListener("astro:page-load", () => {
    initCharacterMovement();
  });
</script>

<!-- <div class="flex flex-row gap-5 mb-8">
  <div class="flex flex-col justify-center gap-3">
      <h1 class="text-xl font-500">SoftKern</h1>
      <div class="flex gap-2 items-center text-sm font-400 color-#737373">
          <span>菜鸟级开发者 </span>
          <span class="text-xs">/</span>
          <span>科技数码爱好者 </span>
          <span class="text-xs">/</span>
          <span>不折腾不舒服斯基</span>
      </div>
      <div class="flex flex-row gap-3 text-lg color-#737373">
          <a href="https://github.com/softkern" aria-label="github">
              <svg width="1em" height="1em" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="none" aria-hidden="true">
                  <path d="M9.99235 18.4318C5.7121 19.7159 5.7121 16.2917 4 15.8637M15.9847 21V17.6871C16.0168 17.2789 15.9617 16.8685 15.8229 16.4833C15.6842 16.0981 15.465 15.7468 15.18 15.4528C17.868 15.1532 20.693 14.1345 20.693 9.46044C20.6928 8.26524 20.233 7.11588 19.4089 6.25025C19.7991 5.20459 19.7716 4.04878 19.3319 3.02294C19.3319 3.02294 18.3217 2.72332 15.9847 4.28989C14.0226 3.75813 11.9544 3.75813 9.99235 4.28989C7.65534 2.72332 6.6452 3.02294 6.6452 3.02294C6.20551 4.04878 6.17792 5.20459 6.56815 6.25025C5.73789 7.12231 5.27767 8.28205 5.28408 9.48612C5.28408 14.1259 8.10904 15.1446 10.797 15.4785C10.5154 15.7695 10.2982 16.1166 10.1595 16.4971C10.0209 16.8776 9.96394 17.2831 9.99235 17.6871V21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
              </svg>
          </a>

          <a href="mailto:hi@softkern.com" aria-label="email">
              <svg width="1em" height="1em" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                  <g fill="none">
                      <path d="M22.3032 7.76159L16.795 11.2668C15.2385 12.2573 14.4602 12.7526 13.6238 12.9455C12.8843 13.1161 12.1157 13.1161 11.3762 12.9455C10.5398 12.7526 9.76153 12.2573 8.20499 11.2668L2.69678 7.76159M22.3032 7.76159C22.5 8.72189 22.5 10.006 22.5 12C22.5 14.8003 22.5 16.2004 21.955 17.27C21.4757 18.2108 20.7108 18.9757 19.77 19.455C18.7004 20 17.3003 20 14.5 20H10.5C7.69974 20 6.29961 20 5.23005 19.455C4.28924 18.9757 3.52433 18.2108 3.04497 17.27C2.5 16.2004 2.5 14.8003 2.5 12C2.5 10.006 2.5 8.72189 2.69678 7.76159M22.3032 7.76159C22.2237 7.37332 22.1119 7.03798 21.955 6.73005C21.4757 5.78924 20.7108 5.02433 19.77 4.54497C18.7004 4 17.3003 4 14.5 4H10.5C7.69974 4 6.29961 4 5.23005 4.54497C4.28924 5.02433 3.52433 5.78924 3.04497 6.73005C2.88807 7.03798 2.77634 7.37332 2.69678 7.76159" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                  </g>
              </svg>
          </a>

          <a href="/rss.xml" aria-label="rss">
              <svg width="1em" height="1em" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                  <g fill="none">
                      <path d="M7 7C9.65216 7 12.1957 8.05357 14.0711 9.92893C15.9464 11.8043 17 14.3478 17 17M7 11.7368C7.69117 11.7368 8.37557 11.873 9.01412 12.1375C9.65268 12.402 10.2329 12.7897 10.7216 13.2784C11.2103 13.7671 11.598 14.3473 11.8625 14.9859C12.127 15.6244 12.2632 16.3088 12.2632 17M7.25614 16.7368H7.26316M11 21H13C15.8003 21 17.2004 21 18.27 20.455C19.2108 19.9757 19.9757 19.2108 20.455 18.27C21 17.2004 21 15.8003 21 13V11C21 8.19974 21 6.79961 20.455 5.73005C19.9757 4.78924 19.2108 4.02433 18.27 3.54497C17.2004 3 15.8003 3 13 3H11C8.19974 3 6.79961 3 5.73005 3.54497C4.78924 4.02433 4.02433 4.78924 3.54497 5.73005C3 6.79961 3 8.19974 3 11V13C3 15.8003 3 17.2004 3.54497 18.27C4.02433 19.2108 4.78924 19.9757 5.73005 20.455C6.79961 21 8.19974 21 11 21Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                  </g>
              </svg>
          </a>
      </div>
  </div>
</div> 
<div class="flex flex-col gap-2 lh-relaxed tracking-wider">
  <p>你好，很高兴认识你👋，我是softkern，目前主业是算法工程师，业余全栈开发者，喜欢写代码，乐于尝试新技术、体验新兴科技产品。</p>
  <p>
      我对编程相关技术都很感兴趣，在业余时间会尝试和学习各种有趣的东西，比如 Web开发、Linux操作系统、AI大模型以及有趣的软件和硬件设备等等，在这里我也会分享相关领域的文章，感兴趣的朋友可以关注一下哦。
  </p>
</div> -->
